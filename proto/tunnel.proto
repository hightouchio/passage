syntax = "proto3";

import "google/protobuf/empty.proto";
option go_package = "github.com/hightouchio/passage/tunnel/proto";

service Passage {
  rpc CreateStandardTunnel(CreateStandardTunnelRequest) returns (Tunnel);
  rpc CreateReverseTunnel(CreateReverseTunnelRequest) returns (Tunnel);

  rpc GetTunnel(GetTunnelRequest) returns (Tunnel);
  rpc DeleteTunnel(DeleteTunnelRequest) returns (google.protobuf.Empty);
}

message Tunnel {
  enum Type {
    STANDARD = 0;
    REVERSE = 1;
  }

  message StandardTunnel {
    string ssh_host = 1;
    uint32 ssh_port = 2;
    string ssh_user = 3;
    string service_host = 4;
    uint32 service_port = 5;
  }

  message ReverseTunnel {
    // No fields
  }

  string id = 1;
  Type type = 2;
  bool enabled = 3;
  uint32 bind_port = 4;

  oneof tunnel {
    StandardTunnel standard_tunnel = 6;
    ReverseTunnel reverse_tunnel = 5;
  }
}

message GetTunnelRequest {
  string id = 1;
}

message DeleteTunnelRequest {
  string id = 1;
}

message CreateStandardTunnelRequest {
  string ssh_host = 1;
  uint32 ssh_port = 2;
  optional string ssh_user = 3;
  string service_host = 4;
  uint32 service_port = 5;

  bool create_key_pair = 6;
}

message CreateReverseTunnelRequest {
  repeated string public_keys = 1;
  bool create_key_pair = 2;
}
