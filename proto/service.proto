syntax = "proto3";
option go_package = "github.com/hightouchio/passage/tunnel/proto";

import "google/protobuf/empty.proto";
import "tunnel.proto";

service Passage {
  rpc CreateStandardTunnel(CreateStandardTunnelRequest) returns (Tunnel);
  rpc CreateReverseTunnel(CreateReverseTunnelRequest) returns (Tunnel);

  rpc GetTunnel(GetTunnelRequest) returns (GetTunnelResponse);
  rpc DeleteTunnel(DeleteTunnelRequest) returns (google.protobuf.Empty);
}

message CreateStandardTunnelRequest {
  string ssh_host = 1;
  uint32 ssh_port = 2;
  optional string ssh_user = 3;
  string service_host = 4;
  uint32 service_port = 5;

  bool create_key_pair = 6;
}

message CreateReverseTunnelRequest {
  repeated string public_keys = 1;
  bool create_key_pair = 2;
}

message GetTunnelRequest {
  string id = 1;
}

message GetTunnelResponse {
  Tunnel tunnel = 1;
  repeated TunnelInstance instances = 2;
}

message DeleteTunnelRequest {
  string id = 1;
}
